/*
 * A speed-improved simplex noise algorithm for 2D, 3D and 4D in JavaScript.
 *
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 */
function FastSimplexNoise(t){t||(t={}),this.amplitude=t.amplitude||1,this.frequency=t.frequency||1,this.octaves=parseInt(t.octaves||1),this.persistence=t.persistence||.5,this.random=t.random||Math.random
var e,i=new Uint8Array(256)
for(e=0;256>e;e++)i[e]=e
var s,o
for(e=255;e>0;e--)s=Math.floor((e+1)*this.random()),o=i[e],i[e]=i[s],i[s]=o
for(this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512),e=0;512>e;e++)this.perm[e]=i[255&e],this.permMod12[e]=this.perm[e]%12}FastSimplexNoise.G2=(3-Math.sqrt(3))/6,FastSimplexNoise.G3=1/6,FastSimplexNoise.G4=(5-Math.sqrt(5))/20,FastSimplexNoise.GRADIENTS_3D=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,-1],[0,1,-1],[0,-1,-1]],FastSimplexNoise.GRADIENTS_4D=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],FastSimplexNoise.dot2D=function(t,e,i){return t[0]*e+t[1]*i},FastSimplexNoise.dot3D=function(t,e,i,s){return t[0]*e+t[1]*i+t[2]*s},FastSimplexNoise.dot4D=function(t,e,i,s,o){return t[0]*e+t[1]*i+t[2]*s+t[3]*o},FastSimplexNoise.prototype.get2DNoise=function(t,e){for(var i=this.amplitude,s=this.frequency,o=0,a=0,r=this.persistence,n=0;n<this.octaves;n++)a+=this.getRaw2DNoise(t*s,e*s)*i,o+=i,i*=r,s*=2
return a/o},FastSimplexNoise.prototype.get3DNoise=function(t,e,i){for(var s=this.amplitude,o=this.frequency,a=0,r=0,n=this.persistence,p=0;p<this.octaves;p++)r+=this.getRaw3DNoise(t*o,e*o,i*o)*s,a+=s,s*=n,o*=2
return r/a},FastSimplexNoise.prototype.get4DNoise=function(t,e,i,s){for(var o=this.amplitude,a=this.frequency,r=0,n=0,p=this.persistence,h=0;h<this.octaves;h++)n+=this.getRaw4DNoise(t*a,e*a,i*a,s*a)*o,r+=o,o*=p,a*=2
return n/r},FastSimplexNoise.prototype.getCylindrical2DNoise=function(t,e,i){var s=e/t,o=t/(2*Math.PI),a=2*s*Math.PI,r=o*Math.sin(a),n=o*Math.cos(a)
return this.get3DNoise(r,n,i)},FastSimplexNoise.prototype.getCylindrical3DNoise=function(t,e,i,s){var o=e/t,a=t/(2*Math.PI),r=2*o*Math.PI,n=a*Math.sin(r),p=a*Math.cos(r)
return this.get4DNoise(n,p,i,s)},FastSimplexNoise.prototype.getRaw2DNoise=function(t,e){var i,s,o,a,r,n=FastSimplexNoise.G2,p=FastSimplexNoise.dot2D,h=FastSimplexNoise.GRADIENTS_3D,l=this.perm,m=this.permMod12,N=.5*(t+e)*(Math.sqrt(3)-1),f=Math.floor(t+N),u=Math.floor(e+N),M=(f+u)*n,c=f-M,S=u-M,x=t-c,d=e-S
x>d?(a=1,r=0):(a=0,r=1)
var D=x-a+n,F=d-r+n,v=x-1+2*n,y=d-1+2*n,I=255&f,g=255&u,P=m[I+l[g]],G=m[I+a+l[g+r]],R=m[I+1+l[g+1]],q=.5-x*x-d*d
0>q?i=0:(q*=q,i=q*q*p(h[P],x,d))
var w=.5-D*D-F*F
0>w?s=0:(w*=w,s=w*w*p(h[G],D,F))
var A=.5-v*v-y*y
return 0>A?o=0:(A*=A,o=A*A*p(h[R],v,y)),70.1*(i+s+o)},FastSimplexNoise.prototype.getRaw3DNoise=function(t,e,i){var s,o,a,r,n,p,h,l,m,N,f=FastSimplexNoise.dot3D,u=FastSimplexNoise.GRADIENTS_3D,M=FastSimplexNoise.G3,c=this.perm,S=this.permMod12,x=(t+e+i)/3,d=Math.floor(t+x),D=Math.floor(e+x),F=Math.floor(i+x),v=(d+D+F)*M,y=d-v,I=D-v,g=F-v,P=t-y,G=e-I,R=i-g
P>=G?G>=R?(n=1,p=0,h=0,l=1,m=1,N=0):P>=R?(n=1,p=0,h=0,l=1,m=0,N=1):(n=0,p=0,h=1,l=1,m=0,N=1):R>G?(n=0,p=0,h=1,l=0,m=1,N=1):R>P?(n=0,p=1,h=0,l=0,m=1,N=1):(n=0,p=1,h=0,l=1,m=1,N=0)
var q=P-n+M,w=G-p+M,A=R-h+M,E=P-l+2*M,T=G-m+2*M,_=R-N+2*M,U=P-1+3*M,C=G-1+3*M,b=R-1+3*M,j=255&d,k=255&D,z=255&F,B=S[j+c[k+c[z]]],H=S[j+n+c[k+p+c[z+h]]],J=S[j+l+c[k+m+c[z+N]]],K=S[j+1+c[k+1+c[z+1]]],L=.5-P*P-G*G-R*R
0>L?s=0:(L*=L,s=L*L*f(u[B],P,G,R))
var O=.5-q*q-w*w-A*A
0>O?o=0:(O*=O,o=O*O*f(u[H],q,w,A))
var Q=.5-E*E-T*T-_*_
0>Q?a=0:(Q*=Q,a=Q*Q*f(u[J],E,T,_))
var V=.5-U*U-C*C-b*b
return 0>V?r=0:(V*=V,r=V*V*f(u[K],U,C,b)),94.6*(s+o+a+r)},FastSimplexNoise.prototype.getRaw4DNoise=function(t,e,i,s){var o,a,r,n,p,h=FastSimplexNoise.dot4D,l=FastSimplexNoise.GRADIENTS_4D,m=FastSimplexNoise.G4,N=this.perm,f=(this.permMod12,(t+e+i+s)*(Math.sqrt(5)-1)/4),u=Math.floor(t+f),M=Math.floor(e+f),c=Math.floor(i+f),S=Math.floor(s+f),x=(u+M+c+S)*m,d=u-x,D=M-x,F=c-x,v=S-x,y=t-d,I=e-D,g=i-F,P=s-v,G=0,R=0,q=0,w=0
y>I?G++:R++,y>g?G++:q++,y>P?G++:w++,I>g?R++:q++,I>P?R++:w++,g>P?q++:w++
var A,E,T,_,U,C,b,j,k,z,B,H
A=G>=3?1:0,E=R>=3?1:0,T=q>=3?1:0,_=w>=3?1:0,U=G>=2?1:0,C=R>=2?1:0,b=q>=2?1:0,j=w>=2?1:0,k=G>=1?1:0,z=R>=1?1:0,B=q>=1?1:0,H=w>=1?1:0
var J=y-A+m,K=I-E+m,L=g-T+m,O=P-_+m,Q=y-U+2*m,V=I-C+2*m,W=g-b+2*m,X=P-j+2*m,Y=y-k+3*m,Z=I-z+3*m,$=g-B+3*m,te=P-H+3*m,ee=y-1+4*m,ie=I-1+4*m,se=g-1+4*m,oe=P-1+4*m,ae=255&u,re=255&M,ne=255&c,pe=255&S,he=N[ae+N[re+N[ne+N[pe]]]]%32,le=N[ae+A+N[re+E+N[ne+T+N[pe+_]]]]%32,me=N[ae+U+N[re+C+N[ne+b+N[pe+j]]]]%32,Ne=N[ae+k+N[re+z+N[ne+B+N[pe+H]]]]%32,fe=N[ae+1+N[re+1+N[ne+1+N[pe+1]]]]%32,ue=.5-y*y-I*I-g*g-P*P
0>ue?o=0:(ue*=ue,o=ue*ue*h(l[he],y,I,g,P))
var Me=.5-J*J-K*K-L*L-O*O
0>Me?a=0:(Me*=Me,a=Me*Me*h(l[le],J,K,L,O))
var ce=.5-Q*Q-V*V-W*W-X*X
0>ce?r=0:(ce*=ce,r=ce*ce*h(l[me],Q,V,W,X))
var Se=.5-Y*Y-Z*Z-$*$-te*te
0>Se?n=0:(Se*=Se,n=Se*Se*h(l[Ne],Y,Z,$,te))
var xe=.5-ee*ee-ie*ie-se*se-oe*oe
return 0>xe?p=0:(xe*=xe,p=xe*xe*h(l[fe],ee,ie,se,oe)),72.3*(o+a+r+n+p)},FastSimplexNoise.prototype.getSpherical2DNoise=function(t,e,i){var s=e/t,o=i/t,a=2*s*Math.PI,r=o*Math.PI,n=Math.sin(r+Math.PI),p=2*Math.PI,h=p*Math.sin(a)*n,l=p*Math.cos(a)*n,m=p*Math.cos(r)
return this.get3DNoise(h,l,m)},FastSimplexNoise.prototype.getSpherical3DNoise=function(t,e,i,s){var o=e/t,a=i/t,r=2*o*Math.PI,n=a*Math.PI,p=Math.sin(n+Math.PI),h=2*Math.PI,l=h*Math.sin(r)*p,m=h*Math.cos(r)*p,N=h*Math.cos(n)
return this.get4DNoise(l,m,N,s)},"undefined"!=typeof define&&define.amd&&define(function(){return FastSimplexNoise}),"undefined"!=typeof exports&&(exports.FastSimplexNoise=FastSimplexNoise),"undefined"!=typeof module&&(module.exports=FastSimplexNoise)
